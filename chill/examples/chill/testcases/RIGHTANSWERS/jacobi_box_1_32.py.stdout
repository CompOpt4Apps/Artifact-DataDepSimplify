if (intMod(s,2) == 0) {
  for(t4 = 0; t4 <= 31; t4++) {
    for(t6 = 0; t6 <= 31; t6++) {
      for(t8 = 0; t8 <= 31; t8++) {
        s0(0,t4,t6,t8);
        s1(0,t4,t6,t8);
        s2(0,t4,t6,t8);
      }
    }
  }
}
else {
  for(t4 = 0; t4 <= 31; t4++) {
    for(t6 = 0; t6 <= 31; t6++) {
      for(t8 = 0; t8 <= 31; t8++) {
        s3(0,t4,t6,t8);
        s4(0,t4,t6,t8);
        s5(0,t4,t6,t8);
      }
    }
  }
}


destination array : _in
source array      : _out
dimensions        : 3

Dimension  Variable  MinOffset  MaxOffset  Width
---------  --------  ---------  ---------  -----
    0         k         -1         1         3
    1         j         -1         1         3
    2         i         -1         1         3

    k    j    i   coefficient
 ---- ---- ----   -----------
    0    0    0    (-128 / 30)
   -1    0    0    (14 / 30)
    0   -1    0    (14 / 30)
    0    1    0    (14 / 30)
    1    0    0    (14 / 30)
    0    0   -1    (14 / 30)
    0    0    1    (14 / 30)
   -1    0   -1    (3 / 30)
    0   -1   -1    (3 / 30)
    0    1   -1    (3 / 30)
    1    0   -1    (3 / 30)
   -1   -1    0    (3 / 30)
   -1    1    0    (3 / 30)
    1   -1    0    (3 / 30)
    1    1    0    (3 / 30)
   -1    0    1    (3 / 30)
    0   -1    1    (3 / 30)
    0    1    1    (3 / 30)
    1    0    1    (3 / 30)
   -1   -1   -1    (1 / 30)
   -1    1   -1    (1 / 30)
    1   -1   -1    (1 / 30)
    1    1   -1    (1 / 30)
   -1   -1    1    (1 / 30)
   -1    1    1    (1 / 30)
    1   -1    1    (1 / 30)
    1    1    1    (1 / 30)

the lower bound of the inner loop is 0
the upper bound of the inner loop is 31

the array being written is:_in
its dimension is:3

the array being read is:_out
its dimension is:3

iteration space of the initializing statement is 
{ Sym=[s] [t,k,j,i] : exists ( alpha : 1+s+2alpha = 0 && i = 0 && t = 0 && 0 <= k <= 31 && 0 <= j <= 31) }
transforming the xform using the relation:
{[In_1,In_2,In_3,In_4,In_5,In_6,In_7,In_8,In_9] -> [Out_1,Out_2,Out_3,Out_4,Out_5,Out_6,Out_7,Out_8,Out_9] : In_1 = Out_1 && In_2 = Out_2 && In_3 = Out_3 && In_4 = Out_4 && In_5 = Out_5 && In_6 = Out_6 && 1+In_7 = Out_7 && In_8 = Out_8 && In_9 = Out_9 }
{[t,k,j,i] : i <= 29 }
if (intMod(s,2) == 0) {
  for(t4 = 0; t4 <= 31; t4++) {
    for(t6 = 0; t6 <= 31; t6++) {
      for(t8 = 0; t8 <= 31; t8++) {
        s0(0,t4,t6,t8);
        s1(0,t4,t6,t8);
        s2(0,t4,t6,t8);
      }
    }
  }
}
else {
  for(t4 = 0; t4 <= 31; t4++) {
    for(t6 = 0; t6 <= 31; t6++) {
      s3(0,t4,t6,0);
      for(t8 = 0; t8 <= 31; t8++) {
        s4(0,t4,t6,t8);
      }
      for(t8 = 0; t8 <= 31; t8++) {
        s5(0,t4,t6,t8);
      }
      for(t8 = 0; t8 <= 31; t8++) {
        s6(0,t4,t6,t8);
      }
      for(t8 = 0; t8 <= 31; t8++) {
        s7(0,t4,t6,t8);
      }
    }
  }
}


s0: { Sym=[s] [t1,t2,t3,t4,t5,t6,t7,t8,t9] : exists ( alpha : 2alpha = s && t3 = 0 && t5 = 0 && t7 = 0 && t1 = 0 && t9 = 0 && t2 = 0 && 0 <= t4 <= 31 && 0 <= t8 <= 31 && 0 <= t6 <= 31) }
s1: { Sym=[s] [t1,t2,t3,t4,t5,t6,t7,t8,t9] : exists ( alpha : 2alpha = s && t3 = 0 && t5 = 0 && t7 = 0 && t1 = 0 && t9 = 1 && t2 = 0 && 0 <= t4 <= 31 && 0 <= t8 <= 31 && 0 <= t6 <= 31) }
s2: { Sym=[s] [t1,t2,t3,t4,t5,t6,t7,t8,t9] : exists ( alpha : 2alpha = s && t3 = 0 && t5 = 0 && t7 = 0 && t1 = 0 && t9 = 2 && t2 = 0 && 0 <= t4 <= 31 && 0 <= t8 <= 31 && 0 <= t6 <= 31) }
s3: { Sym=[s] [t1,t2,t3,t4,t5,t6,t7,t8,t9] : exists ( alpha : 2alpha = 1+s && t3 = 0 && t5 = 0 && t7 = 0 && t1 = 0 && t9 = 3 && t8 = 0 && t2 = 0 && 0 <= t6 <= 31 && 0 <= t4 <= 31) }
s4: { Sym=[s] [t1,t2,t3,t4,t5,t6,t7,t8,t9] : exists ( alpha : 2alpha = 1+s && t3 = 0 && t5 = 0 && t7 = 1 && t9 = 3 && t1 = 0 && t2 = 0 && 0 <= t4 <= 31 && 0 <= t6 <= 31 && 0 <= t8 <= 31) }
s5: { Sym=[s] [t1,t2,t3,t4,t5,t6,t7,t8,t9] : exists ( alpha : 2alpha = 1+s && t3 = 0 && t5 = 0 && t7 = 2 && t9 = 3 && t1 = 0 && t2 = 0 && 0 <= t4 <= 31 && 0 <= t6 <= 31 && 0 <= t8 <= 31) }
s6: { Sym=[s] [t1,t2,t3,t4,t5,t6,t7,t8,t9] : exists ( alpha : 2alpha = 1+s && t3 = 0 && t5 = 0 && t7 = 6 && t9 = 4 && t1 = 0 && t2 = 0 && 0 <= t4 <= 31 && 0 <= t6 <= 31 && 0 <= t8 <= 31) }
s7: { Sym=[s] [t1,t2,t3,t4,t5,t6,t7,t8,t9] : exists ( alpha : 2alpha = 1+s && t3 = 0 && t5 = 0 && t7 = 7 && t9 = 5 && t1 = 0 && t2 = 0 && 0 <= t4 <= 31 && 0 <= t6 <= 31 && 0 <= t8 <= 31) }
